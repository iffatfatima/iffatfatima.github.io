---
"$schema": https://raw.githubusercontent.com/jsonresume/resume-schema/v1.0.0/schema.json
basics:
  name: Iffat Fatima
  label: PhD Candidate - Software Sustainability
  image: ''
  email: iffat.fatima@hotmail.com
  phone: ''
  url: ''
  summary: I work in Sustainability x Software Architecture research. My other research interests include Software Sustainability, Software Architecture and Model-driven Software Engineering. I am currently pursuing my PhD as part of <a href="https://s2group.cs.vu.nl">Software and Sustianability Research Group</a> on <a href="https://s2group.cs.vu.nl/sustainablecloud/">SustainableCloud Project</a>
  location:
    countryCode: US
    address: Netherlands
  profiles:
  - network: LinkedIn
    username: ACoAABh-hR4B7PUVX9goh1vqQBBUS-Iu3uCl4GA
    url: https://www.linkedin.com/in/ACoAABh-hR4B7PUVX9goh1vqQBBUS-Iu3uCl4GA/
work:
- name: Vrije Universiteit Amsterdam
  position: PHD Candidate
  startDate: '2022'
  endDate: 'Present'
  highlights: []
  summary:
  url: https://www.linkedin.com/company/5570
  location: Amsterdam, North Holland, Netherlands
- name: University of Tartu Institute of Computer Science
  position: Software Engineer
  startDate: 'Oct 2020'
  endDate: 'Jan 2021'
  highlights: []
  summary:
  url: https://www.linkedin.com/company/12993719
  location:
- name: Teamo Inc
  position: Software Engineer
  startDate: 'Feb 2019'
  endDate: 'Dec 2019'
  highlights: []
  summary:
  url: https://www.linkedin.com/company/13231668
  location:
- name: Pacsquare Technologies
  position: Software Developer
  startDate: 'Jun 2017'
  endDate: 'Feb 2019'
  highlights: []
  summary:
  url: https://www.linkedin.com/company/3827901
  location:
volunteer: []
education:
- institution: Vrije Universiteit Amsterdam
  studyType: PhD
  groupName: Software and Sustainability Research Group
  groupLink: https://s2group.cs.vu.nl/
  startDate: '2022'
  endDate: 'Present'
- institution: National University of Sciences and Technology (NUST)
  area: BE Software Engineering
  studyType: Bachelor's Degree
  startDate: '2013'
  endDate: '2017'
  score: ''
  courses:
  - " - Advanced Programming"
  - " - Data Structures and Algorithms"
  - " - Design and Analysis of Algorithms"
  - " - Database Systems"
  - " - Computer Networks"
  - " - Computer Architecture and organization"
- institution: National University of Sciences and Technology (NUST)
  area: MS Software Engineering
  studyType: Master's degree
  startDate: '2018'
  endDate: '2021'
  score: ''
  courses:
  - " - Data Engineering"
  - " - Advanced Software Engineering"
awards: []
certificates: []
publications:
- name: Tool support for Green Android Development
  publisher: Springer
  releaseDate: '2021-10-06'
  summary: ''
  url: https://link.springer.com/book/10.1007/978-3-030-69970-3
- name: " Detection and Correction of Android-specific Code Smells and Energy Bugs:
    An Android Lint Extension"
  publisher: CEUR Workshop Proceedings
  releaseDate: '2020-12-01'
  summary: 'Context: While Android applications suffer from code smells and energy
    drain issues there is still a lack oftools that help developers improve energy
    consumption and maintainability of Android applications. Objective:Our research
    aims to provide tool support to Android developers helping them to create greener
    and moremaintainable applications by eliminating Android-specific code smells/energy
    bugs. The proposed tool supportintegrates routine code smell detection with energy
    bug detection so that developers can do both at the sametime. Method: We extend
    ‘Android Lint’ (AL) with custom rules to detect and correct 12 code smells (nineare
    new and three are improved) and three energy bugs (two are new and one is improved).
    In addition, forthe improved and newly introduced code smells, we compared the
    performance of our tool with the openversion of the ’PAPRIKA’ tool. Result: We
    evaluated our tool on nine open-source Android applications.Our tool detects the
    specified code smells and energy bugs with an average precision, average recall
    and F1score of 0.93, 0.96, and 0.94, respectively. It accurately corrects 84%
    of selected code smells and energy bugs.The performance of the new and improved
    code smell detection is better than that achieved by ‘PAPRIKA’.Conclusion: Our
    tool is a useful extension to the existing ‘AL’ tool with better performance than
    ‘PAPRIKA'
  url: http://ceur-ws.org/Vol-2767/09-QuASoQ-2020.pdf
- name: " Tool Support for Green Android Development: A Systematic Mapping Study "
  publisher: SciTePress
  releaseDate: '2020-12-31'
  summary: " In order to make mobile apps energy efficient, we must find ways to support
    energy efficient app development. While there is a lack of support tools that
    aid practitioners in moving towards green Android development. Our goal is to
    establish the state of the art with respect to support tools that aid green Android
    development and to identify opportunities for further research. To achieve this
    goal, we conduct a systematic mapping study. After applying inclusion, exclusion
    and quality criteria we selected 21 studies for further analysis. Current support
    tools to aid green Android development were classified into three categories:
    Profiler, Detector and Optimizer. Most Profiler tools provide a graphical representation
    of energy consumed over time at various levels. Most Detector tools provide a
    list of energy bugs/code smells to be manually corrected by a developer for the
    improvement of energy. Most Optimizer tools automatically generate refactored
    version(s) of APK/SC. The most typica l technique used by Detector and Optimizer
    tools is static source code analysis using a predefined set of rules. Profiler
    tools use a wide range of techniques to measure energy consumption. However, these
    tools have limitations in terms of code smell/energy bug coverage, accuracy, and
    usability."
  url: https://www.scitepress.org/Link.aspx?doi=10.5220/0009770304090417
- name: Extending Interaction Flow Modeling Language (IFML) for Android User Interface
    Components
  publisher: Springer, Cham
  releaseDate: '2019-10-03'
  summary: Interaction Flow Modeling Language (IFML) is an Object Management Group
    (OMG) standard for depicting front end behavior of software applications. It provides
    a platform independent description of graphical user interfaces for web as well
    as mobile applications. Mobile development has emerged as a vast area of research
    in the last decade. IFML meta-model caters for many generic user interface (UI)
    components but several characteristics of mobile application interface are found
    missing. This paper investigates the user interface characteristics of native
    android application user interface that are absent in the IFML meta-model. We
    then propose an extension of the identified characteristics using IFML to supplement
    usability in Android applications. This extended meta-model can be further used
    to generate Android platform specific code for user interfaces via model to code
    transformation.
  url: https://link.springer.com/chapter/10.1007/978-3-030-30275-7_7
skills:
- name: Java
  level: ''
  keywords: []
- name: Kotlin
  level: ''
  keywords: []
- name: Python
  level: ''
  keywords: []
- name: Software Documentation
  level: ''
  keywords: []
- name: JIRA
  level: ''
  keywords: []
- name: jQuery
  level: ''
  keywords: []
- name: PHP
  level: ''
  keywords: []
- name: RxJava
  level: ''
  keywords: []
- name: Bootstrap
  level: ''
  keywords: []
- name: Room
  level: ''
  keywords: []
- name: NetBeans
  level: ''
  keywords: []
- name: MySQL
  level: ''
  keywords: []
- name: Eclipse
  level: ''
  keywords: []
- name: SQLite
  level: ''
  keywords: []
- name: Microsoft Office
  level: ''
  keywords: []
- name: Visual Studio
  level: ''
  keywords: []
- name: NoSQL
  level: ''
  keywords: []
- name: Selenium
  level: ''
  keywords: []
- name: Hibernate
  level: ''
  keywords: []
- name: Android Studio
  level: ''
  keywords: []
- name: AdMob
  level: ''
  keywords: []
- name: Photoshop
  level: ''
  keywords: []
- name: MongoDB
  level: ''
  keywords: []
- name: Dagger
  level: ''
  keywords: []
- name: C
  level: ''
  keywords: []
- name: HTML
  level: ''
  keywords: []
- name: Crashlytics
  level: ''
  keywords: []
- name: Model-view-viewmodel (MVVM)
  level: ''
  keywords: []
- name: C++
  level: ''
  keywords: []
- name: CSS
  level: ''
  keywords: []
- name: Firebase
  level: ''
  keywords: []
- name: Green IT
  level: ''
  keywords: []
- name: Model-View-Presenter (MVP)
  level: ''
  keywords: []
- name: Android
  level: ''
  keywords: []
- name: JavaScript
  level: ''
  keywords: []
- name: Facebook API
  level: ''
  keywords: []
- name: Git
  level: ''
  keywords: []
- name: Adobe Photoshop
  level: ''
  keywords: []
- name: Google Maps API
  level: ''
  keywords: []
languages:
- fluency: Full Professional
  language: English
- fluency: Native Speaker
  language: Urdu
interests: []
references: []
projects:
- name: Ride with Surf
  startDate: '2019-02-28'
  summary: Worked on Android application of the ride-sharing entertainment and advertising
    platform
  url: https://www.linkedin.com/company/ridewithsurf/
  endDate: '2019-09-30'
- name: PacEquity
  startDate: '2018-09-30'
  summary: 'Worked on Android application for a stock trading platform. '
  url: http://pacequity.net
  endDate: '2019-02-28'
- name: AgriPoint - A Context Aware Mobile Application for Agriculture Community
  startDate: '2016-06-30'
  summary: 'An android application for agriculture community with a JAVA EE back-end
    and NOSQL database, developed using a three tier architecture.  This application
    was tested by farmers and traders who work in the field. The project was shortlisted
    among the top 10 projects in FICS''17 Stage 2 and qualified to FICS''17 Stage
    3 as well. '
  url:
  endDate: '2017-05-31'
- name: Prototype OS implementation (Pintos)
  startDate: ''
  summary: Implemented multi-threading, thread scheduling and a file system on top
    of the Pintos Operating System
  url:
meta:
  version: v1.0.0
  canonical: https://github.com/jsonresume/resume-schema/blob/v1.0.0/schema.json
